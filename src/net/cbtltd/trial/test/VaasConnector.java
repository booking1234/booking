/**
 * @author	abookingnet
 * @see License at http://abookingnet.com
 * @version	4.0.0
 */
package net.cbtltd.trial.test;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.net.URLEncoder;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import net.cbtltd.server.RazorServer;
import net.cbtltd.shared.Text;
import net.cbtltd.shared.api.HasUrls;

import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.auth.AuthScope;
import org.apache.http.auth.UsernamePasswordCredentials;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;
import org.apache.log4j.Logger;

/**
 * Acapela VaaS connector.
 * @see <pre>http://www.acapela-vaas.com/index.html text as a service</pre>
 * Thank you for your interest in Voice as a Service.
 * Here are your identifiers to connect to the site:
 *  - login EVAL_7832472
 *  - password c8y5ieay
 * Here are your identifiers to set in the source code:
 * - login EVAL_VAAS
 * - application EVAL_7832472
 * - password c8y5ieay
 * You can now go to http://www.acapela-vaas.com/ , login using these identifiers, and get access to the documentation, code samples, etc...
 */
public class VaasConnector {

	// The server writes the response in the return stream of the HTTP connection that you used to send to the request
	// For response as INFO
	// you exploit the information contained in the response, notably the URL of the sound file generated by the service (excluding error cases).
	// you have the details of the generated sound, your are able to play it using the toolbox of your development environment.
	// For response as SOUND /STREAM: you play the sound you received
	// when the request succeed: you receive the sound to play and, if producing MP3, gets message details in ID3 tags.
	// when an error occurs: you receive an HTTP 500 internal server error or, if producing MP3, an empty sound file containing error details in its ID3 tags.

	private static final Logger LOG = Logger.getLogger(VaasConnector.class.getName());
	private static final String VAAS_APPLICATION = "EVAL_7832472"; //"DEV";
	private static final String VAAS_PASSWORD = "c8y5ieay"; //"8dbmslg8fpkl9fs";
	private static final String VAAS_URL = "http://vaas.acapela-group.com/Services/Synthesizer/";
	private static final String VAAS_LOGIN = "EVAL_VAAS"; //"~VAAS_KIOSK";
	private static final String VAAS_ENVIRONMENT = "APACHE_2.2.19_JAVA_1.6.0"; //"APACHE_2.2.9_PHP_5.5";
	private static final String VAAS_VERSION = "2-0"; //"1-0";

	// Constructs the VaaS connector with default account (demo) settings.
	public VaasConnector() {}

	// Constructs the VaaS connector with given application, service url, login name and password.
//	public VaasConnector(String application, String url, String login, String password)
//	{
//		VAAS_APPLICATION = application;
//		VAAS_URL = url;
//		VAAS_LOGIN = login;
//		VAAS_PASSWORD = password;
//	}

	/** Creates file of given text with given VaaS voice.
	 * @see <pre>http://www.acapela-vaas.com/ReleasedDocumentation/voices_list.php
	 * @see <pre>http://www.acapela-vaas.com/ReleasedDocumentation/Others/request_description.php?page=NEW for parameters
	 * @param voice eg heather22k
	 * 		Voice suffix determines the format:
     *		8k and 22k are respectively 8kHz and 22.05kHz PCM.
     *		8ka and 8kmu are 8kHz in A law and U law respectively encoded.
	 * @param text
	 */
	
	public void speak(String voice, Text text) {
		try {
		
		File file = new File(RazorServer.ROOT_DIRECTORY+ HasUrls.AUDIO_DIRECTORY + text.getId() + text.getLanguage().toUpperCase() + Text.AUDIO_WAV);
			
			OutputStream fos = new FileOutputStream(file);
			try {
				HashMap<String, String> params = new HashMap<String, String>();
				params.put("prot_vers", "2");
				params.put("cl_env", VAAS_ENVIRONMENT);
				params.put("cl_vers", VAAS_VERSION);
				params.put("cl_login", VAAS_LOGIN);
				params.put("cl_app", VAAS_APPLICATION);
				params.put("cl_pwd", VAAS_PASSWORD);
				params.put("req_voice", getVoice(text.getLanguage()));
				params.put("req_text", URLEncoder.encode(text.getNotes(), "UTF-8").replace("+", "%20"));
				params.put("req_timeout", "120"); //Request timeout in seconds
				//optional parameters
				params.put("req_type", "NEW"); //NEW, GET the type of the request to send. "NEW" is assumed if omitted. 
				params.put("req_snd_id", text.getId() + text.getLanguage()); //the id to use for a new message (do not use the dot character (\'.\') inside and make sure it is unique!).
				params.put("req_vol", "32768"); //Volume min = 50, default = 32768, max = 65535
				params.put("req_spd", "180"); //Speed min = 60, default = 180, max = 360 
				params.put("req_vct", "100"); //Shaping min = 50, default = 100, max = 150 
				params.put("req_eq1", "0"); //Equalizer min = -100, default = 0, max = 100
				//req_eq1, req_eq2, req_eq3 and req_eq4 for bands of 275Hz, 2.2kHz, 5kHz and 8.3kHz, respectively.
				params.put("req_snd_type", "WAV"); //MP3, WAV, RAW Sound file format. "MP3" is assumed if omitted.

				//Parameters for response format
				params.put("req_asw_type", "STREAM"); //Type of response expected: INFO, SOUND, STREAM
					//"INFO" : The "historical" response type. You receive a key/value response encoded like URL params. Assumed by default.
					//"SOUND" : You receive the sound corresponding to the message that you requested from service once it is generated. If it is an MP3 one, you can find some informations inside its ID3 tags.
					//"STREAM" : Like "SOUND" but the sound is sent while the service generates it, not available when producing WAV, A Law or U Law sound.
				params.put("req_comment", "Test audio"); //Information to store concerning this operation (author, reason, ...) you can get it back 
				params.put("req_asw_redirect_url", "http://www.acapela-vaas.com/ReleasedDocumentation/Others/response_analysis.php");
				//URL to redirect the response as an HTTP POST request to analyze the service response to your request:
						
				HttpResponse response = doHttpPost(VAAS_URL, params, null, null, new DefaultHttpClient());

				//response.getEntity().isStreaming()
				response.getEntity().writeTo(fos);
			} 
			catch (IllegalArgumentException x) {LOG.error("IllegalArgumentException " + x.getStackTrace());}
			catch (IllegalStateException x) {LOG.error("IllegalStateException " + x.getStackTrace());}
			finally {fos.close();}
		} catch (IOException x) {LOG.error("IOException " + x.getStackTrace());}
	}
	
	private String getVoice(String language) {
		String VOICE_LIST[][] = 
			{
				{"ar_SA", "Arabic (Saudi Arabia)", "Salma", "HQ", "F", "salma22k"},
				{"ar_SA", "Arabic (Saudi Arabia)", "Salma", "HQ", "F", "salma8k"},
				{"ar_SA", "Arabic (Saudi Arabia)", "Salma", "HQ", "F", "salma8ka"},
				{"ar_SA", "Arabic (Saudi Arabia)", "Salma", "HQ", "F", "salma8kmu"},
				{"ar_SA", "Arabic (Saudi Arabia)", "Youssef", "HQ", "M", "youssef22k"},
				{"ar_SA", "Arabic (Saudi Arabia)", "Youssef", "HQ", "M", "youssef8k"},
				{"ar_SA", "Arabic (Saudi Arabia)", "Youssef", "HQ", "M", "youssef8ka"},
				{"ar_SA", "Arabic (Saudi Arabia)", "Youssef", "HQ", "M", "youssef8kmu"},
				{"ar_SA", "Arabic (Saudi Arabia)", "Nawfal", "HD", "M", "nawfal22k"},
				{"ar_SA", "Arabic (Saudi Arabia)", "Nawfal", "HD", "M", "nawfal8k"},
				{"ar_SA", "Arabic (Saudi Arabia)", "Nawfal", "HD", "M", "nawfal8ka"},
				{"ar_SA", "Arabic (Saudi Arabia)", "Nawfal", "HD", "M", "nawfal8kmu"},
				{"cs_CZ", "Czech", "Eliska", "HQ", "F", "eliska22k"},
				{"cs_CZ", "Czech", "Eliska", "HQ", "F", "eliska8k"},
				{"cs_CZ", "Czech", "Eliska", "HQ", "F", "eliska8ka"},
				{"cs_CZ", "Czech", "Eliska", "HQ", "F", "eliska8kmu"},
				{"cs_CZ", "Czech", "Sabrine", "HD", "F", "sabrine22k"},
				{"cs_CZ", "Czech", "Sabrine", "HD", "F", "sabrine8k"},
				{"cs_CZ", "Czech", "Sabrine", "HD", "F", "sabrine8ka"},
				{"cs_CZ", "Czech", "Sabrine", "HD", "F", "sabrine8kmu"},
				{"da_DK", "Danish", "Mette", "HQ", "F", "mette22k"},
				{"da_DK", "Danish", "Mette", "HQ", "F", "mette8k"},
				{"da_DK", "Danish", "Mette", "HQ", "F", "mette8ka"},
				{"da_DK", "Danish", "Mette", "HQ", "F", "mette8kmu"},
				{"da_DK", "Danish", "Poul", "HD", "M", "poul22k"},
				{"da_DK", "Danish", "Poul", "HD", "M", "poul8k"},
				{"da_DK", "Danish", "Poul", "HD", "M", "poul8ka"},
				{"da_DK", "Danish", "Poul", "HD", "M", "poul8kmu"},
				{"nl_BE", "Dutch (Belgium)", "Jeroen", "HQ", "M", "jeroen22k"},
				{"nl_BE", "Dutch (Belgium)", "Jeroen", "HQ", "M", "jeroen8k"},
				{"nl_BE", "Dutch (Belgium)", "Jeroen", "HQ", "M", "jeroen8ka"},
				{"nl_BE", "Dutch (Belgium)", "Jeroen", "HQ", "M", "jeroen8kmu"},
				{"nl_BE", "Dutch (Belgium)", "Sofie", "HQ", "F", "sofie22k"},
				{"nl_BE", "Dutch (Belgium)", "Sofie", "HQ", "F", "sofie8k"},
				{"nl_BE", "Dutch (Belgium)", "Sofie", "HQ", "F", "sofie8ka"},
				{"nl_BE", "Dutch (Belgium)", "Sofie", "HQ", "F", "sofie8kmu"},
				{"nl_BE", "Dutch (Belgium)", "Els", "HD", "F", "els22k"},
				{"nl_BE", "Dutch (Belgium)", "Els", "HD", "F", "els8k"},
				{"nl_BE", "Dutch (Belgium)", "Els", "HD", "F", "els8ka"},
				{"nl_BE", "Dutch (Belgium)", "Els", "HD", "F", "els8kmu"},
				{"nl_NL", "Dutch (Netherlands)", "Femke", "HQ", "F", "femke22k"},
				{"nl_NL", "Dutch (Netherlands)", "Femke", "HQ", "F", "femke8k"},
				{"nl_NL", "Dutch (Netherlands)", "Femke", "HQ", "F", "femke8ka"},
				{"nl_NL", "Dutch (Netherlands)", "Femke", "HQ", "F", "femke8kmu"},
				{"nl_NL", "Dutch (Netherlands)", "Max", "HQ", "M", "max22k"},
				{"nl_NL", "Dutch (Netherlands)", "Max", "HQ", "M", "max8k"},
				{"nl_NL", "Dutch (Netherlands)", "Max", "HQ", "M", "max8ka"},
				{"nl_NL", "Dutch (Netherlands)", "Max", "HQ", "M", "max8kmu"},
				{"nl_NL", "Dutch (Netherlands)", "Hilde", "HD", "F", "hilde22k"},
				{"nl_NL", "Dutch (Netherlands)", "Hilde", "HD", "F", "hilde8k"},
				{"nl_NL", "Dutch (Netherlands)", "Hilde", "HD", "F", "hilde8ka"},
				{"nl_NL", "Dutch (Netherlands)", "Hilde", "HD", "F", "hilde8kmu"},
				{"nl_NL", "Dutch (Netherlands)", "Jan", "HD", "M", "jan22k"},
				{"nl_NL", "Dutch (Netherlands)", "Jan", "HD", "M", "jan8k"},
				{"nl_NL", "Dutch (Netherlands)", "Jan", "HD", "M", "jan8ka"},
				{"nl_NL", "Dutch (Netherlands)", "Jan", "HD", "M", "jan8kmu"},
				{"en_GB", "English (UK)", "Graham", "HQ", "M", "graham22k"},
				{"en_GB", "English (UK)", "Graham", "HQ", "M", "graham8k"},
				{"en_GB", "English (UK)", "Graham", "HQ", "M", "graham8ka"},
				{"en_GB", "English (UK)", "Graham", "HQ", "M", "graham8kmu"},
				{"en_GB", "English (UK)", "Lucy", "HQ", "F", "lucy22k"},
				{"en_GB", "English (UK)", "Lucy", "HQ", "F", "lucy8k"},
				{"en_GB", "English (UK)", "Lucy", "HQ", "F", "lucy8ka"},
				{"en_GB", "English (UK)", "Lucy", "HQ", "F", "lucy8kmu"},
				{"en_GB", "English (UK)", "Peter", "HQ", "M", "peter22k"},
				{"en_GB", "English (UK)", "Peter", "HQ", "M", "peter8k"},
				{"en_GB", "English (UK)", "Peter", "HQ", "M", "peter8ka"},
				{"en_GB", "English (UK)", "Peter", "HQ", "M", "peter8kmu"},
				{"en_GB", "English (UK)", "Rachel", "HQ", "F", "rachel22k"},
				{"en_GB", "English (UK)", "Rachel", "HQ", "F", "rachel8k"},
				{"en_GB", "English (UK)", "Rachel", "HQ", "F", "rachel8ka"},
				{"en_GB", "English (UK)", "Rachel", "HQ", "F", "rachel8kmu"},
				{"en_GB", "English (UK)", "Kate", "HD", "F", "kate22k"},
				{"en_GB", "English (UK)", "Kate", "HD", "F", "kate8k"},
				{"en_GB", "English (UK)", "Kate", "HD", "F", "kate8ka"},
				{"en_GB", "English (UK)", "Kate", "HD", "F", "kate8kmu"},
				{"en_GB", "English (UK)", "Roger", "HD", "M", "roger22k"},
				{"en_GB", "English (UK)", "Roger", "HD", "M", "roger8k"},
				{"en_GB", "English (UK)", "Roger", "HD", "M", "roger8ka"},
				{"en_GB", "English (UK)", "Roger", "HD", "M", "roger8kmu"},
				{"en_US", "English (USA)", "Heather", "HQ", "F", "heather22k"},
				{"en_US", "English (USA)", "Heather", "HQ", "F", "heather8k"},
				{"en_US", "English (USA)", "Heather", "HQ", "F", "heather8ka"},
				{"en_US", "English (USA)", "Heather", "HQ", "F", "heather8kmu"},
				{"en_US", "English (USA)", "Kenny", "HQ", "M", "kenny22k"},
				{"en_US", "English (USA)", "Kenny", "HQ", "M", "kenny8k"},
				{"en_US", "English (USA)", "Kenny", "HQ", "M", "kenny8ka"},
				{"en_US", "English (USA)", "Kenny", "HQ", "M", "kenny8kmu"},
				{"en_US", "English (USA)", "Laura", "HQ", "F", "laura22k"},
				{"en_US", "English (USA)", "Laura", "HQ", "F", "laura8k"},
				{"en_US", "English (USA)", "Laura", "HQ", "F", "laura8ka"},
				{"en_US", "English (USA)", "Laura", "HQ", "F", "laura8kmu"},
				{"en_US", "English (USA)", "Nelly", "HQ", "F", "nelly22k"},
				{"en_US", "English (USA)", "Nelly", "HQ", "F", "nelly8k"},
				{"en_US", "English (USA)", "Nelly", "HQ", "F", "nelly8ka"},
				{"en_US", "English (USA)", "Nelly", "HQ", "F", "nelly8kmu"},
				{"en_US", "English (USA)", "Ryan", "HQ", "M", "ryan22k"},
				{"en_US", "English (USA)", "Ryan", "HQ", "M", "ryan8k"},
				{"en_US", "English (USA)", "Ryan", "HQ", "M", "ryan8ka"},
				{"en_US", "English (USA)", "Ryan", "HQ", "M", "ryan8kmu"},
				{"en_US", "English (USA)", "Jane", "HD", "F", "jane22k"},
				{"en_US", "English (USA)", "Jane", "HD", "F", "jane8k"},
				{"en_US", "English (USA)", "Jane", "HD", "F", "jane8ka"},
				{"en_US", "English (USA)", "Jane", "HD", "F", "jane8kmu"},
				{"en_US", "English (USA)", "John", "HD", "M", "john22k"},
				{"en_US", "English (USA)", "John", "HD", "M", "john8k"},
				{"en_US", "English (USA)", "John", "HD", "M", "john8ka"},
				{"en_US", "English (USA)", "John", "HD", "M", "john8kmu"},
				{"fo_FO", "Faroese", "Sjurdur", "HD", "M", "sjurdur22k"},
				{"fo_FO", "Faroese", "Sjurdur", "HD", "M", "sjurdur8k"},
				{"fo_FO", "Faroese", "Sjurdur", "HD", "M", "sjurdur8ka"},
				{"fo_FO", "Faroese", "Sjurdur", "HD", "M", "sjurdur8kmu"},
				{"fi_FI", "Finnish", "Sanna", "HQ", "F", "sanna22k"},
				{"fi_FI", "Finnish", "Sanna", "HQ", "F", "sanna8k"},
				{"fi_FI", "Finnish", "Sanna", "HQ", "F", "sanna8ka"},
				{"fi_FI", "Finnish", "Sanna", "HQ", "F", "sanna8kmu"},
				{"fi_FI", "Finnish", "Matti", "HD", "M", "matti22k"},
				{"fi_FI", "Finnish", "Matti", "HD", "M", "matti8k"},
				{"fi_FI", "Finnish", "Matti", "HD", "M", "matti8ka"},
				{"fi_FI", "Finnish", "Matti", "HD", "M", "matti8kmu"},
				{"fr_BE", "French (Belgium)", "Justine", "HQ", "F", "justine22k"},
				{"fr_BE", "French (Belgium)", "Justine", "HQ", "F", "justine8k"},
				{"fr_BE", "French (Belgium)", "Justine", "HQ", "F", "justine8ka"},
				{"fr_BE", "French (Belgium)", "Justine", "HQ", "F", "justine8kmu"},
				{"fr_CA", "French (Canada)", "Louise", "HQ", "F", "louise22k"},
				{"fr_CA", "French (Canada)", "Louise", "HQ", "F", "louise8k"},
				{"fr_CA", "French (Canada)", "Louise", "HQ", "F", "louise8ka"},
				{"fr_CA", "French (Canada)", "Louise", "HQ", "F", "louise8kmu"},
				{"fr_FR", "French (France)", "Alice", "HQ", "F", "alice22k"},
				{"fr_FR", "French (France)", "Alice", "HQ", "F", "alice8k"},
				{"fr_FR", "French (France)", "Alice", "HQ", "F", "alice8ka"},
				{"fr_FR", "French (France)", "Alice", "HQ", "F", "alice8kmu"},
				{"fr_FR", "French (France)", "Bruno", "HQ", "M", "bruno22k"},
				{"fr_FR", "French (France)", "Bruno", "HQ", "M", "bruno8k"},
				{"fr_FR", "French (France)", "Bruno", "HQ", "M", "bruno8ka"},
				{"fr_FR", "French (France)", "Bruno", "HQ", "M", "bruno8kmu"},
				{"fr_FR", "French (France)", "Claire", "HQ", "F", "claire22k"},
				{"fr_FR", "French (France)", "Claire", "HQ", "F", "claire8k"},
				{"fr_FR", "French (France)", "Claire", "HQ", "F", "claire8ka"},
				{"fr_FR", "French (France)", "Claire", "HQ", "F", "claire8kmu"},
				{"fr_FR", "French (France)", "Julie", "HQ", "F", "julie22k"},
				{"fr_FR", "French (France)", "Julie", "HQ", "F", "julie8k"},
				{"fr_FR", "French (France)", "Julie", "HQ", "F", "julie8ka"},
				{"fr_FR", "French (France)", "Julie", "HQ", "F", "julie8kmu"},
				{"fr_FR", "French (France)", "Margaux", "HQ", "F", "margaux22k"},
				{"fr_FR", "French (France)", "Margaux", "HQ", "F", "margaux8k"},
				{"fr_FR", "French (France)", "Margaux", "HQ", "F", "margaux8ka"},
				{"fr_FR", "French (France)", "Margaux", "HQ", "F", "margaux8kmu"},
				{"fr_FR", "French (France)", "Robot", "HQ", "M", "robot22k"},
				{"fr_FR", "French (France)", "Caroline", "HD", "F", "caroline22k"},
				{"fr_FR", "French (France)", "Caroline", "HD", "F", "caroline8k"},
				{"fr_FR", "French (France)", "Caroline", "HD", "F", "caroline8ka"},
				{"fr_FR", "French (France)", "Caroline", "HD", "F", "caroline8kmu"},
				{"fr_FR", "French (France)", "Pierre", "HD", "M", "pierre22k"},
				{"fr_FR", "French (France)", "Pierre", "HD", "M", "pierre8k"},
				{"fr_FR", "French (France)", "Pierre", "HD", "M", "pierre8ka"},
				{"fr_FR", "French (France)", "Pierre", "HD", "M", "pierre8kmu"},
				{"de_DE", "German", "Julia", "HQ", "F", "julia22k"},
				{"de_DE", "German", "Julia", "HQ", "F", "julia8k"},
				{"de_DE", "German", "Julia", "HQ", "F", "julia8ka"},
				{"de_DE", "German", "Julia", "HQ", "F", "julia8kmu"},
				{"de_DE", "German", "Klaus", "HQ", "M", "klaus22k"},
				{"de_DE", "German", "Klaus", "HQ", "M", "klaus8k"},
				{"de_DE", "German", "Klaus", "HQ", "M", "klaus8ka"},
				{"de_DE", "German", "Klaus", "HQ", "M", "klaus8kmu"},
				{"de_DE", "German", "Sarah", "HQ", "F", "sarah22k"},
				{"de_DE", "German", "Sarah", "HQ", "F", "sarah8k"},
				{"de_DE", "German", "Sarah", "HQ", "F", "sarah8ka"},
				{"de_DE", "German", "Sarah", "HQ", "F", "sarah8kmu"},
				{"de_DE", "German", "Gerhard", "HD", "M", "gerhard22k"},
				{"de_DE", "German", "Gerhard", "HD", "M", "gerhard8k"},
				{"de_DE", "German", "Gerhard", "HD", "M", "gerhard8ka"},
				{"de_DE", "German", "Gerhard", "HD", "M", "gerhard8kmu"},
				{"de_DE", "German", "Helga", "HD", "F", "helga22k"},
				{"de_DE", "German", "Helga", "HD", "F", "helga8k"},
				{"de_DE", "German", "Helga", "HD", "F", "helga8ka"},
				{"de_DE", "German", "Helga", "HD", "F", "helga8kmu"},
				{"el_GR", "Greek", "Dimitris", "HQ", "M", "dimitris22k"},
				{"el_GR", "Greek", "Dimitris", "HQ", "M", "dimitris8k"},
				{"el_GR", "Greek", "Dimitris", "HQ", "M", "dimitris8ka"},
				{"el_GR", "Greek", "Dimitris", "HQ", "M", "dimitris8kmu"},
				{"is_IS", "Icelandic", "Snorri", "HD", "M", "snorri22k"},
				{"is_IS", "Icelandic", "Snorri", "HD", "M", "snorri8k"},
				{"is_IS", "Icelandic", "Snorri", "HD", "M", "snorri8ka"},
				{"it_IT", "Italian", "Chiara", "HQ", "F", "chiara22k"},
				{"it_IT", "Italian", "Chiara", "HQ", "F", "chiara8k"},
				{"it_IT", "Italian", "Chiara", "HQ", "F", "chiara8ka"},
				{"it_IT", "Italian", "Chiara", "HQ", "F", "chiara8kmu"},
				{"it_IT", "Italian", "Vittorio", "HQ", "M", "vittorio22k"},
				{"it_IT", "Italian", "Vittorio", "HQ", "M", "vittorio8k"},
				{"it_IT", "Italian", "Vittorio", "HQ", "M", "vittorio8ka"},
				{"it_IT", "Italian", "Vittorio", "HQ", "M", "vittorio8kmu"},
				{"it_IT", "Italian", "Roberto", "HD", "M", "roberto22k"},
				{"it_IT", "Italian", "Roberto", "HD", "M", "roberto8k"},
				{"it_IT", "Italian", "Roberto", "HD", "M", "roberto8ka"},
				{"it_IT", "Italian", "Roberto", "HD", "M", "roberto8kmu"},
				{"no_NO", "Norwegian", "Kari", "HQ", "F", "kari22k"},
				{"no_NO", "Norwegian", "Kari", "HQ", "F", "kari8k"},
				{"no_NO", "Norwegian", "Kari", "HQ", "F", "kari8ka"},
				{"no_NO", "Norwegian", "Kari", "HQ", "F", "kari8kmu"},
				{"no_NO", "Norwegian", "Olav", "HQ", "M", "olav22k"},
				{"no_NO", "Norwegian", "Olav", "HQ", "M", "olav8k"},
				{"no_NO", "Norwegian", "Olav", "HQ", "M", "olav8ka"},
				{"no_NO", "Norwegian", "Olav", "HQ", "M", "olav8kmu"},
				{"no_NO", "Norwegian", "Trygve", "HD", "M", "trygve22k"},
				{"no_NO", "Norwegian", "Trygve", "HD", "M", "trygve8k"},
				{"no_NO", "Norwegian", "Trygve", "HD", "M", "trygve8ka"},
				{"no_NO", "Norwegian", "Trygve", "HD", "M", "trygve8kmu"},
				{"no_NO", "Norwegian", "Vegard", "HD", "M", "vegard22k"},
				{"no_NO", "Norwegian", "Vegard", "HD", "M", "vegard8k"},
				{"no_NO", "Norwegian", "Vegard", "HD", "M", "vegard8ka"},
				{"no_NO", "Norwegian", "Vegard", "HD", "M", "vegard8kmu"},
				{"pl_PL", "Polish", "Ania", "HQ", "F", "ania22k"},
				{"pl_PL", "Polish", "Ania", "HQ", "F", "ania8k"},
				{"pl_PL", "Polish", "Ania", "HQ", "F", "ania8ka"},
				{"pl_PL", "Polish", "Ania", "HQ", "F", "ania8kmu"},
				{"pt_BR", "Portuguese (Brazil)", "Marcia", "HQ", "F", "marcia22k"},
				{"pt_BR", "Portuguese (Brazil)", "Marcia", "HQ", "F", "marcia8k"},
				{"pt_BR", "Portuguese (Brazil)", "Marcia", "HQ", "F", "marcia8ka"},
				{"pt_BR", "Portuguese (Brazil)", "Marcia", "HQ", "F", "marcia8kmu"},
				{"pt_BR", "Portuguese (Brazil)", "Carlos", "HD", "M", "carlos22k"},
				{"pt_BR", "Portuguese (Brazil)", "Carlos", "HD", "M", "carlos8k"},
				{"pt_BR", "Portuguese (Brazil)", "Carlos", "HD", "M", "carlos8ka"},
				{"pt_BR", "Portuguese (Brazil)", "Carlos", "HD", "M", "carlos8kmu"},
				{"pt_BR", "Portuguese (Brazil)", "Paola", "HD", "F", "paola22k"},
				{"pt_BR", "Portuguese (Brazil)", "Paola", "HD", "F", "paola8k"},
				{"pt_BR", "Portuguese (Brazil)", "Paola", "HD", "F", "paola8ka"},
				{"pt_BR", "Portuguese (Brazil)", "Paola", "HD", "F", "paola8kmu"},
				{"pt_PT", "Portuguese (Portugal)", "Celia", "HQ", "F", "celia22k"},
				{"pt_PT", "Portuguese (Portugal)", "Celia", "HQ", "F", "celia8k"},
				{"pt_PT", "Portuguese (Portugal)", "Celia", "HQ", "F", "celia8ka"},
				{"pt_PT", "Portuguese (Portugal)", "Celia", "HQ", "F", "celia8kmu"},
				{"pt_PT", "Portuguese (Portugal)", "Elia", "HD", "F", "elia22k"},
				{"pt_PT", "Portuguese (Portugal)", "Elia", "HD", "F", "elia8k"},
				{"pt_PT", "Portuguese (Portugal)", "Elia", "HD", "F", "elia8ka"},
				{"pt_PT", "Portuguese (Portugal)", "Elia", "HD", "F", "elia8kmu"},
				{"pt_PT", "Portuguese (Portugal)", "Ester", "HD", "F", "ester22k"},
				{"pt_PT", "Portuguese (Portugal)", "Ester", "HD", "F", "ester8k"},
				{"pt_PT", "Portuguese (Portugal)", "Ester", "HD", "F", "ester8ka"},
				{"pt_PT", "Portuguese (Portugal)", "Ester", "HD", "F", "ester8kmu"},
				{"ru_RU", "Russian", "Alyona", "HQ", "F", "alyona22k"},
				{"ru_RU", "Russian", "Alyona", "HQ", "F", "alyona8k"},
				{"ru_RU", "Russian", "Alyona", "HQ", "F", "alyona8ka"},
				{"ru_RU", "Russian", "Alyona", "HQ", "F", "alyona8kmu"},
				{"es_ES", "Spanish (Spain)", "Antonio", "HQ", "M", "antonio22k"},
				{"es_ES", "Spanish (Spain)", "Antonio", "HQ", "M", "antonio8k"},
				{"es_ES", "Spanish (Spain)", "Antonio", "HQ", "M", "antonio8ka"},
				{"es_ES", "Spanish (Spain)", "Antonio", "HQ", "M", "antonio8kmu"},
				{"es_ES", "Spanish (Spain)", "Maria", "HQ", "F", "maria22k"},
				{"es_ES", "Spanish (Spain)", "Maria", "HQ", "F", "maria8k"},
				{"es_ES", "Spanish (Spain)", "Maria", "HQ", "F", "maria8ka"},
				{"es_ES", "Spanish (Spain)", "Maria", "HQ", "F", "maria8kmu"},
				{"es_ES", "Spanish (Spain)", "Javier", "HD", "M", "javier22k"},
				{"es_ES", "Spanish (Spain)", "Javier", "HD", "M", "javier8k"},
				{"es_ES", "Spanish (Spain)", "Javier", "HD", "M", "javier8ka"},
				{"es_ES", "Spanish (Spain)", "Javier", "HD", "M", "javier8kmu"},
				{"es_US", "Spanish (USA)", "Rosa", "HQ", "F", "rosa22k"},
				{"es_US", "Spanish (USA)", "Rosa", "HQ", "F", "rosa8k"},
				{"es_US", "Spanish (USA)", "Rosa", "HQ", "F", "rosa8ka"},
				{"es_US", "Spanish (USA)", "Rosa", "HQ", "F", "rosa8kmu"},
				{"sv_SE", "Swedish", "Elin", "HQ", "F", "elin22k"},
				{"sv_SE", "Swedish", "Elin", "HQ", "F", "elin8k"},
				{"sv_SE", "Swedish", "Elin", "HQ", "F", "elin8ka"},
				{"sv_SE", "Swedish", "Elin", "HQ", "F", "elin8kmu"},
				{"sv_SE", "Swedish", "Emma", "HQ", "F", "emma22k"},
				{"sv_SE", "Swedish", "Emma", "HQ", "F", "emma8k"},
				{"sv_SE", "Swedish", "Emma", "HQ", "F", "emma8ka"},
				{"sv_SE", "Swedish", "Emma", "HQ", "F", "emma8kmu"},
				{"sv_SE", "Swedish", "Erik", "HQ", "M", "erik22k"},
				{"sv_SE", "Swedish", "Erik", "HQ", "M", "erik8k"},
				{"sv_SE", "Swedish", "Erik", "HQ", "M", "erik8ka"},
				{"sv_SE", "Swedish", "Erik", "HQ", "M", "erik8kmu"},
				{"sv_SE", "Swedish", "AnnMarie", "HD", "F", "annmarie22k"},
				{"sv_SE", "Swedish", "AnnMarie", "HD", "F", "annmarie8k"},
				{"sv_SE", "Swedish", "AnnMarie", "HD", "F", "annmarie8ka"},
				{"sv_SE", "Swedish", "AnnMarie", "HD", "F", "annmarie8kmu"},
				{"sv_SE", "Swedish", "Ingmar", "HD", "M", "ingmar22k"},
				{"sv_SE", "Swedish", "Ingmar", "HD", "M", "ingmar8k"},
				{"sv_SE", "Swedish", "Ingmar", "HD", "M", "ingmar8ka"},
				{"sv_SE", "Swedish", "Ingmar", "HD", "M", "ingmar8kmu"},
				{"tr_TR", "Turkish", "Ipek", "HQ", "F", "ipek22k"},
				{"tr_TR", "Turkish", "Ipek", "HQ", "F", "ipek8k"},
				{"tr_TR", "Turkish", "Ipek", "HQ", "F", "ipek8ka"},
				{"tr_TR", "Turkish", "Ipek", "HQ", "F", "ipek8kmu"},
				{"tr_TR", "Turkish", "Baris", "HD", "M", "baris22k"},
				{"tr_TR", "Turkish", "Baris", "HD", "M", "baris8k"},
				{"tr_TR", "Turkish", "Baris", "HD", "M", "baris8ka"},
				{"tr_TR", "Turkish", "Baris", "HD", "M", "baris8kmu"},
				{"tr_TR", "Turkish", "Ceren", "HD", "F", "ceren22k"},
				{"tr_TR", "Turkish", "Ceren", "HD", "F", "ceren8k"},
				{"tr_TR", "Turkish", "Ceren", "HD", "F", "ceren8ka"},
				{"tr_TR", "Turkish", "Ceren", "HD", "F", "ceren8kmu"}
			};
		
		if ("ar".equalsIgnoreCase(language)) {return "salma8k";}
		else if ("cz".equalsIgnoreCase(language)) {return "eliska8k";}
		else if ("da".equalsIgnoreCase(language)) {return "mette8k";}
		else if ("nl".equalsIgnoreCase(language)) {return "femke8k";}
		else if ("en".equalsIgnoreCase(language)) {return "lucy8k";}
		else if ("fo".equalsIgnoreCase(language)) {return "sjurdur8k";}
		else if ("fi".equalsIgnoreCase(language)) {return "sanna8k";}
		else if ("fr".equalsIgnoreCase(language)) {return "alice8k";}
		else if ("de".equalsIgnoreCase(language)) {return "julia8k";}
		else if ("el".equalsIgnoreCase(language)) {return "dimitris8k";}
		else if ("is".equalsIgnoreCase(language)) {return "snorri8k";}
		else if ("it".equalsIgnoreCase(language)) {return "chiara8k";}
		else if ("no".equalsIgnoreCase(language)) {return "kari8k";}
		else if ("pl".equalsIgnoreCase(language)) {return "ania8k";}
		else if ("pt".equalsIgnoreCase(language)) {return "celia8k";}
		else if ("ru".equalsIgnoreCase(language)) {return "alyona8k";}
		else if ("es".equalsIgnoreCase(language)) {return "antonio8k";}
		else if ("sv".equalsIgnoreCase(language)) {return "elin8k";}
		else if ("tr".equalsIgnoreCase(language)) {return "ipek8k";}
		else return "lucy8k"; //try an English accent!
	}
	
	// Internal HTTP post helper function
	private static HttpResponse doHttpPost(
			String mUrl, 
			HashMap<String, String> params, 
			String username, 
			String password,
			DefaultHttpClient httpClient
		) {
		HttpResponse response = null;
		if (username != null && password != null) {
			httpClient.getCredentialsProvider().setCredentials(
				new AuthScope(AuthScope.ANY_HOST, AuthScope.ANY_PORT),
				new UsernamePasswordCredentials(username, password)
			);
		}
		HttpPost postMethod = new HttpPost(mUrl);
		if (params == null) return null;
		try {
			List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>(2);
			for (String key : params.keySet()) {nameValuePairs.add(new BasicNameValuePair(key, params.get(key)));}
			postMethod.setHeader("Content-Type", "application/x-www-form-urlencoded");
			postMethod.setEntity(new UrlEncodedFormEntity(nameValuePairs));
			response = httpClient.execute(postMethod);
			LOG.debug("STATUS CODE: " + String.valueOf(response.getStatusLine().getStatusCode()));
		} catch (Exception x) {LOG.error(x.getMessage());} 
		finally {}
		return response;
	}
}


//String responseBody = getResponseBody(response);
//Log.debug("AcapelaVaaSDemo", "BODY: " + responseBody);
//String vars[] = responseBody.split("&");
//for(int n = 0; n < vars.length; n++) {
//	String var[] = vars[n].split("=");
//	if(var[0].equals("snd_url")) {
//		// Get url to MP3 audio file
//		String url = var[1];
//
		// Download and play audio
//		MediaPlayer mp = new MediaPlayer();
//		mp.setDataSource(url);    
//		mp.prepare();    
//		mp.start();
//
//		return true;	// ok
//	}
//}
//return false;	// error
//}

// Internal HTTP post get response body functions...
//	private String getResponseBody(HttpResponse response) {
//		String response_text = null;
//		HttpEntity entity = null;
//		try {
//			entity = response.getEntity();
//			response_text = _getResponseBody(entity);
//		} catch (ParseException e) {e.printStackTrace();}
//		catch (IOException e) {
//			if (entity != null) {
//				try {entity.consumeContent();}
//				catch (IOException e1) {}
//			}
//		}
//		return response_text;
//	}

//	private String _getResponseBody(final HttpEntity entity) throws IOException, ParseException {
//		InputStream instream = entity.getContent();
//		if (instream == null) {return "";}
//		if (entity.getContentLength() > Integer.MAX_VALUE) {throw new IllegalArgumentException("HTTP entity too large to be buffered in memory");}
//		String charset = getContentCharSet(entity);
//		if (charset == null) {charset = HTTP.DEFAULT_CONTENT_CHARSET;}
//		Reader reader = new InputStreamReader(instream, charset);
//		StringBuilder buffer = new StringBuilder();
//		try {
//			char[] tmp = new char[1024];
//			int l;
//			while ((l = reader.read(tmp)) != -1) {buffer.append(tmp, 0, l);}
//		}
//		finally {reader.close();}
//		return buffer.toString();
//	}

//	private String getContentCharSet(final HttpEntity entity) throws ParseException {
//		String charset = null;
//		if (entity.getContentType() != null) {
//			HeaderElement values[] = entity.getContentType().getElements();
//			if (values.length > 0) {
//				NameValuePair param = values[0].getParameterByName("charset");
//				if (param != null) {charset = param.getValue();}
//			}
//		}
//		return charset;
//	}
//}
