package net.cbtltd.rest.bookt;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.4.0
 */


@WebServiceClient(name = "ConnectREST", 
                  wsdlLocation = "http://connect.bookt.com/svc/rest.svc?wsdl",
                  targetNamespace = "https://connect.bookt.com/svc") 
public class ConnectREST extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("https://connect.bookt.com/svc", "ConnectREST");
    public final static QName BasicHttpBindingIConnectREST = new QName("https://connect.bookt.com/svc", "BasicHttpBinding_IConnectREST");
    static {
        URL url = null;
        try {
            url = new URL("http://connect.bookt.com/svc/rest.svc?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(ConnectREST.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://connect.bookt.com/svc/rest.svc?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public ConnectREST(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ConnectREST(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ConnectREST() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     * 
     * @return
     *     returns IConnectREST
     */
    @WebEndpoint(name = "BasicHttpBinding_IConnectREST")
    public IConnectREST getBasicHttpBindingIConnectREST() {
        return super.getPort(BasicHttpBindingIConnectREST, IConnectREST.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IConnectREST
     */
    @WebEndpoint(name = "BasicHttpBinding_IConnectREST")
    public IConnectREST getBasicHttpBindingIConnectREST(WebServiceFeature... features) {
        return super.getPort(BasicHttpBindingIConnectREST, IConnectREST.class, features);
    }

}
