package net.cbtltd.rest.leisurelink;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.12
 * 2014-08-26T16:35:41.413-07:00
 * Generated source version: 2.7.12
 * 
 */
@WebServiceClient(name = "RGWService", 
                  wsdlLocation = "https://connect.leisurelink.com/Prerelease/RGWservice.asmx?WSDL",
                  targetNamespace = "http://LeisureLink.com/RetailWebServices/") 
public class RGWService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://LeisureLink.com/RetailWebServices/", "RGWService");
    public final static QName RGWServiceHttpPost = new QName("http://LeisureLink.com/RetailWebServices/", "RGWServiceHttpPost");
    public final static QName RGWServiceSoap = new QName("http://LeisureLink.com/RetailWebServices/", "RGWServiceSoap");
    public final static QName RGWServiceSoap12 = new QName("http://LeisureLink.com/RetailWebServices/", "RGWServiceSoap12");
    public final static QName RGWServiceHttpGet = new QName("http://LeisureLink.com/RetailWebServices/", "RGWServiceHttpGet");
    static {
        URL url = null;
        try {
            url = new URL("http://connect.leisurelink.com/Prerelease/RGWservice.asmx?WSDL");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(RGWService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "https://connect.leisurelink.com/Prerelease/RGWservice.asmx?WSDL");
        }
        WSDL_LOCATION = url;
    }

    public RGWService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public RGWService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public RGWService() {
        super(WSDL_LOCATION, SERVICE);
    }

    /**
     *
     * @return
     *     returns RGWServiceHttpPost
     */
    @WebEndpoint(name = "RGWServiceHttpPost")
    public RGWServiceHttpPost getRGWServiceHttpPost() {
        return super.getPort(RGWServiceHttpPost, RGWServiceHttpPost.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RGWServiceHttpPost
     */
    @WebEndpoint(name = "RGWServiceHttpPost")
    public RGWServiceHttpPost getRGWServiceHttpPost(WebServiceFeature... features) {
        return super.getPort(RGWServiceHttpPost, RGWServiceHttpPost.class, features);
    }
    /**
     *
     * @return
     *     returns RGWServiceSoap
     */
    @WebEndpoint(name = "RGWServiceSoap")
    public RGWServiceSoap getRGWServiceSoap() {
        return super.getPort(RGWServiceSoap, RGWServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RGWServiceSoap
     */
    @WebEndpoint(name = "RGWServiceSoap")
    public RGWServiceSoap getRGWServiceSoap(WebServiceFeature... features) {
        return super.getPort(RGWServiceSoap, RGWServiceSoap.class, features);
    }
    /**
     *
     * @return
     *     returns RGWServiceSoap
     */
    @WebEndpoint(name = "RGWServiceSoap12")
    public RGWServiceSoap getRGWServiceSoap12() {
        return super.getPort(RGWServiceSoap12, RGWServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RGWServiceSoap
     */
    @WebEndpoint(name = "RGWServiceSoap12")
    public RGWServiceSoap getRGWServiceSoap12(WebServiceFeature... features) {
        return super.getPort(RGWServiceSoap12, RGWServiceSoap.class, features);
    }
    /**
     *
     * @return
     *     returns RGWServiceHttpGet
     */
    @WebEndpoint(name = "RGWServiceHttpGet")
    public RGWServiceHttpGet getRGWServiceHttpGet() {
        return super.getPort(RGWServiceHttpGet, RGWServiceHttpGet.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RGWServiceHttpGet
     */
    @WebEndpoint(name = "RGWServiceHttpGet")
    public RGWServiceHttpGet getRGWServiceHttpGet(WebServiceFeature... features) {
        return super.getPort(RGWServiceHttpGet, RGWServiceHttpGet.class, features);
    }

}
