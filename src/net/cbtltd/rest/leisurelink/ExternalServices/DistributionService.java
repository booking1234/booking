package net.cbtltd.rest.leisurelink.ExternalServices;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.12
 * 2014-10-17T09:48:55.492+02:00
 * Generated source version: 2.7.12
 * 
 */
@WebServiceClient(name = "DistributionService", 
                  wsdlLocation = "test.wsdl",
                  targetNamespace = "http://tempuri.org/") 
public class DistributionService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://tempuri.org/", "DistributionService");
    public final static QName DistributionServiceHttpGet = new QName("http://tempuri.org/", "DistributionServiceHttpGet");
    public final static QName DistributionServiceSoap12 = new QName("http://tempuri.org/", "DistributionServiceSoap12");
    public final static QName DistributionServiceSoap = new QName("http://tempuri.org/", "DistributionServiceSoap");
    public final static QName DistributionServiceHttpPost = new QName("http://tempuri.org/", "DistributionServiceHttpPost");
    static {
        URL url = DistributionService.class.getResource("test.wsdl");
        if (url == null) {
            url = DistributionService.class.getClassLoader().getResource("test.wsdl");
        } 
        if (url == null) {
            java.util.logging.Logger.getLogger(DistributionService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "test.wsdl");
        }       
        WSDL_LOCATION = url;
    }

    public DistributionService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public DistributionService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public DistributionService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    

    /**
     *
     * @return
     *     returns DistributionServiceHttpGet
     */
    @WebEndpoint(name = "DistributionServiceHttpGet")
    public DistributionServiceHttpGet getDistributionServiceHttpGet() {
        return super.getPort(DistributionServiceHttpGet, DistributionServiceHttpGet.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DistributionServiceHttpGet
     */
    @WebEndpoint(name = "DistributionServiceHttpGet")
    public DistributionServiceHttpGet getDistributionServiceHttpGet(WebServiceFeature... features) {
        return super.getPort(DistributionServiceHttpGet, DistributionServiceHttpGet.class, features);
    }
    /**
     *
     * @return
     *     returns DistributionServiceSoap
     */
    @WebEndpoint(name = "DistributionServiceSoap12")
    public DistributionServiceSoap getDistributionServiceSoap12() {
        return super.getPort(DistributionServiceSoap12, DistributionServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DistributionServiceSoap
     */
    @WebEndpoint(name = "DistributionServiceSoap12")
    public DistributionServiceSoap getDistributionServiceSoap12(WebServiceFeature... features) {
        return super.getPort(DistributionServiceSoap12, DistributionServiceSoap.class, features);
    }
    /**
     *
     * @return
     *     returns DistributionServiceSoap
     */
    @WebEndpoint(name = "DistributionServiceSoap")
    public DistributionServiceSoap getDistributionServiceSoap() {
        return super.getPort(DistributionServiceSoap, DistributionServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DistributionServiceSoap
     */
    @WebEndpoint(name = "DistributionServiceSoap")
    public DistributionServiceSoap getDistributionServiceSoap(WebServiceFeature... features) {
        return super.getPort(DistributionServiceSoap, DistributionServiceSoap.class, features);
    }
    /**
     *
     * @return
     *     returns DistributionServiceHttpPost
     */
    @WebEndpoint(name = "DistributionServiceHttpPost")
    public DistributionServiceHttpPost getDistributionServiceHttpPost() {
        return super.getPort(DistributionServiceHttpPost, DistributionServiceHttpPost.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DistributionServiceHttpPost
     */
    @WebEndpoint(name = "DistributionServiceHttpPost")
    public DistributionServiceHttpPost getDistributionServiceHttpPost(WebServiceFeature... features) {
        return super.getPort(DistributionServiceHttpPost, DistributionServiceHttpPost.class, features);
    }

}
