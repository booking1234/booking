
package net.cbtltd.rest.interhome;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import java.util.zip.ZipEntry;
import java.util.zip.ZipInputStream;

import javax.xml.namespace.QName;
import javax.xml.ws.BindingProvider;

import net.cbtltd.shared.Country;
import net.cbtltd.shared.Language;

import org.apache.cxf.headers.Header;
import org.apache.cxf.jaxb.JAXBDataBinding;

/**
 * This class was generated by Apache CXF 2.4.0
 * 2012-08-09T13:20:11.648+02:00
 * Generated source version: 2.4.0
 * 
 * @see http://www.mkyong.com/webservices/jax-ws/application-authentication-with-jax-ws/
 * @see http://jax-ws.java.net/faq/index.html#auth
 * @see http://cxf.547215.n5.nabble.com/Add-SOAP-HEADER-value-td549830.html
 */
public final class Test {

	private static final QName SERVICE_NAME = new QName("http://www.interhome.com/webservice", "WebService");

	private Test() {
	}

	public static void main(String args[]) throws Exception {
		URL wsdlURL = WebService.WSDL_LOCATION;
		if (args.length > 0) { 
			File wsdlFile = new File(args[0]);
			try {
				if (wsdlFile.exists()) {
					wsdlURL = wsdlFile.toURI().toURL();
				} else {
					wsdlURL = new URL(args[0]);
				}
			} catch (MalformedURLException e) {
				e.printStackTrace();
			}
		}

		WebService ss = new WebService(wsdlURL, SERVICE_NAME);
		WebServiceSoap port = ss.getWebServiceSoap();

		ServiceAuthHeader sah = new ServiceAuthHeader();
		sah.setUsername("CH1000725");
		sah.setPassword("RCLOUD");

		List<Header> headers = new ArrayList<Header>();
		((BindingProvider) port).getRequestContext().put(Header.HEADER_LIST, headers);
		Header authHeader = new Header(
			new QName("http://www.interhome.com/webservice", "ServiceAuthHeader"), 
			sah,
			new JAXBDataBinding(ServiceAuthHeader.class)
		);
		headers.add(authHeader);

		if (false) {
			System.out.println("Invoking checkServerHealthV2...");
			java.lang.String _checkServerHealthV2_type = "";
			CheckServerHealthResultV2 _checkServerHealthV2__return = port.checkServerHealthV2(_checkServerHealthV2_type);
			System.out.println("checkServerHealthV2.result=" + _checkServerHealthV2__return);
		}
		if (false) {
			System.out.println("Invoking cancelBooking...");
			CancelBookingInputValue rq = new CancelBookingInputValue();
			rq.setBookingID("12345");
			rq.setRetailerCode("CH1000725");
			rq.setSalesOfficeCode("2052");
			System.out.println("cancelBooking.rq=" + rq);
			CancelBookingReturnValue rs = port.cancelBooking(rq);
			System.out.println("cancelBooking.rs=" + rs);
		}
		if (false) {
			System.out.println("Invoking paymentExtInformation...");
			PaymentInformationInputValue _paymentExtInformation_inputValue = null;
			PaymentInformationReturnValue _paymentExtInformation__return = port.paymentExtInformation(_paymentExtInformation_inputValue);
			System.out.println("paymentExtInformation.result=" + _paymentExtInformation__return);
		}
		if (false) {
			System.out.println("Invoking prices...");
			PricesInputValue _prices_inputValue = null;
			PricesRetunValue _prices__return = port.prices(_prices_inputValue);
			System.out.println("prices.result=" + _prices__return);
		}
		if (false) {
			System.out.println("Invoking newsletter...");
			NewsletterInputValue _newsletter_inputValue = null;
			NewsletterReturnValue _newsletter__return = port.newsletter(_newsletter_inputValue);
			System.out.println("newsletter.result=" + _newsletter__return);
		}
		if (false) {
			System.out.println("Invoking checkBooking...");
			CheckBookingInputValue rq = new CheckBookingInputValue();
			rq.setAccommodationCode("DE2981.100.1");
			rq.setCheckIn("2012-10-10");
			rq.setCheckOut("2012-10-30");
			rq.setCurrencyCode(net.cbtltd.shared.Currency.Code.USD.name());
			rq.setRetailerCode("");
			rq.setSalesOfficeCode("");
			rq.setToleranceDays(1);
			CheckBookingReturnValue rs = port.checkBooking(rq);
			System.out.println("checkBooking.result=" + rs);
		}
		if (false) {
			System.out.println("Invoking retailerBooking...");
			RetailerBookingInputValue rq = new RetailerBookingInputValue();
			RetailerBookingReturnValue rs = port.retailerBooking(rq);
			System.out.println("retailerBooking.result=" + rs);
		}
		if (false) {
			System.out.println("Invoking nearestBookingDate...");
			NearestBookingDateInputValue _nearestBookingDate_inputValue = null;
			NearestBookingDateReturnValue _nearestBookingDate__return = port.nearestBookingDate(_nearestBookingDate_inputValue);
			System.out.println("nearestBookingDate.result=" + _nearestBookingDate__return);
		}
		if (false) {
			System.out.println("Invoking checkServerHealth...");
			CheckServerHealthResult rs = port.checkServerHealth();
			System.out.println("checkServerHealth.result=" + rs);
		}
		if (false) {
			System.out.println("Invoking search...");
			SearchInputValue _search_inputValue = null;
			SearchReturnValue _search__return = port.search(_search_inputValue);
			System.out.println("search.result=" + _search__return);
		}
		if (true) {
			System.out.println("Invoking priceDetail...");
			PriceDetailInputValue rq = new PriceDetailInputValue();
			rq.setAccommodationCode("DE2981.100.1");
			rq.setCheckIn("2012-12-01");
			rq.setCheckOut("2012-12-15");
			rq.setRetailerCode("CH1000725");
			rq.setSalesOfficeCode("2048");
			rq.setAdults(2);
			rq.setCurrencyCode("eur");
			rq.setLanguageCode("en");
			PriceDetailRetunValue rs = port.priceDetail(rq);
			System.out.println("priceDetail.result=" + rs);
		}
		if (false) {
			System.out.println("Invoking availability...");
			AvailabilityInputValue rq = new AvailabilityInputValue();
			rq.setAccommodationCode("DE2981.100.1");
			rq.setCheckIn("2012-12-01");
			rq.setCheckOut("2012-12-15");
			AvailabilityRetunValue rs = port.availability(rq);
			System.out.println("availability.result=" + rs);
		}
		if (false) {
			System.out.println("Invoking accommodationDetail...");
			AccommodationDetailInputValue rq = new AccommodationDetailInputValue();
			rq.setAccommodationCode("DE2981.100.1");
			rq.setLanguageCode(Language.Code.de.name());
			AccommodationDetailReturnValue rs = port.accommodationDetail(rq);
			System.out.println("accommodationDetail.result=" + rs);
		}
		if (false) {
			System.out.println("Invoking readBooking...");
			ReadBookingInputValue _readBooking_inputValue = null;
			ReadBookingReturnValue _readBooking__return = port.readBooking(_readBooking_inputValue);
			System.out.println("readBooking.result=" + _readBooking__return);
		}
		if (false) {
			System.out.println("Invoking cancellationConditions...");
			CancellationConditionInputValue _cancellationConditions_inputValue = null;
			CancellationConditionReturnValue _cancellationConditions__return = port.cancellationConditions(_cancellationConditions_inputValue);
			System.out.println("cancellationConditions.result=" + _cancellationConditions__return);
		}
		if (false) {
			System.out.println("Invoking ratifyBooking...");
			RatifyBookingInputValue _ratifyBooking_inputValue = null;
			RatifyBookingReturnValue _ratifyBooking__return = port.ratifyBooking(_ratifyBooking_inputValue);
			System.out.println("ratifyBooking.result=" + _ratifyBooking__return);
		}
		if (false) {
			System.out.println("Invoking clientBooking...");
			ClientBookingInputValue rq = new ClientBookingInputValue();
			rq.setAccommodationCode("DE2981.100.1");
			//        rq.setAdditionalServices(value);
			rq.setAdults(2);
			rq.setBabies(0);
			rq.setBankAccountHolder("JAMES BOND");
			rq.setBankAccountNumber("1234567");
			rq.setBankCode("1234");
			rq.setCheckIn("2012-12-01");
			rq.setCheckOut("2012-12-15");
			rq.setChildren(2);
			rq.setComment("TEST");
			rq.setCreditCardCvc("123");
			rq.setCreditCardExpiry("201508");
			rq.setCreditCardNumber("4012888888881881");
			rq.setCreditCardType(CCType.VISA);
			rq.setCustomerAddressCountryCode(Country.Code.AT.name());
			rq.setCustomerAddressPlace("Vienna");
			rq.setCustomerAddressState("Mauer");
			rq.setCustomerAddressStreet("Bendagasse 4");
			rq.setCustomerAddressZIP("1234");
			rq.setCustomerFirstName("Chris");
			rq.setCustomerName("Martin");
			rq.setCustomerEmail("a@b.com");
			rq.setCustomerPhone("1234");
			rq.setLanguageCode(Language.Code.en.name());
			rq.setPaymentType(PaymentType.CREDIT_CARD);
			rq.setRetailerCode("CH1000725");
			rq.setSalesOfficeCode("2052");
			System.out.println("clientBooking.rq=" + rq);
			ClientBookingReturnValue rs = port.clientBooking(rq);
			System.out.println("clientBooking.result=" + rs);
		}
		if (false) {
			System.out.println("Invoking additionalServices...");
			AdditionalServicesInputValue _additionalServices_inputValue = null;
			AdditionalServicesReturnValue _additionalServices__return = port.additionalServices(_additionalServices_inputValue);
			System.out.println("additionalServices.result=" + _additionalServices__return);
		}
		if (false) {
			System.out.println("Invoking priceList...");
			PriceListInputValue _priceList_inputValue = null;
			PriceListReturnValue _priceList__return = port.priceList(_priceList_inputValue);
			System.out.println("priceList.result=" + _priceList__return);
		}
		if (false) {
			System.out.println("Invoking trips...");
			TripsInputValue _trips_inputValue = null;
			TripsReturnValue _trips__return = port.trips(_trips_inputValue);
			System.out.println("trips.result=" + _trips__return);
		}
		if (false) {
			System.out.println("Invoking voucherDetail...");
			VoucherDetailInputValue _voucherDetail_inputValue = null;
			VoucherDetailReturnValue _voucherDetail__return = port.voucherDetail(_voucherDetail_inputValue);
			System.out.println("voucherDetail.result=" + _voucherDetail__return);
		}
		if (false) {
			System.out.println("Invoking affiliateDetail...");
			AffiliateDetailInputValue _affiliateDetail_inputValue = null;
			AffiliateDetailReturnValue _affiliateDetail__return = port.affiliateDetail(_affiliateDetail_inputValue);
			System.out.println("affiliateDetail.result=" + _affiliateDetail__return);
		}

		if (false) {
			String fName = "c:/alert_en.xml.zip";
			byte[] buf = new byte[1024];
			ZipInputStream zinstream = new ZipInputStream(new FileInputStream(fName));
			ZipEntry zentry = zinstream.getNextEntry();
			System.out.println("Name of current Zip Entry : " + zentry + "\n");
			while (zentry != null) {
				String entryName = zentry.getName();
				System.out.println("Name of Zip Entry : " + entryName);
				FileOutputStream outstream = new FileOutputStream(entryName);
				int n;
				while ((n = zinstream.read(buf, 0, 1024)) > -1) {
					outstream.write(buf, 0, n);
				}
				System.out.println("Successfully Extracted File Name : " + entryName);
				outstream.close();
				zinstream.closeEntry();
				zentry = zinstream.getNextEntry();
			}
			zinstream.close();
		}

		if (false) {
			try {
				//InputStream is = A_Handler.ftp("accommodation.xml.zip");
			} catch(Throwable x) {x.printStackTrace();}
		}
		System.exit(0);
	}

}
