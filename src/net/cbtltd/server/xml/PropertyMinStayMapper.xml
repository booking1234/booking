<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.cbtltd.server.api.PropertyMinStayMapper">

	<resultMap id="ResultMap" type="MinStay">
		<id column="ID" jdbcType="INTEGER" property="id" />
		<result column="SupplierID" jdbcType="INTEGER" property="supplierid" />
		<result column="ProductID" jdbcType="VARCHAR" property="productid" />
		<result column="FromDate" jdbcType="DATE" property="fromdate" />
		<result column="ToDate" jdbcType="DATE" property="todate" />
		<result column="Value" jdbcType="INTEGER" property="value" />
		<result column="version" jdbcType="TIMESTAMP" property="version" />
	</resultMap>
	
	<sql id="columns">
		ID, SupplierID, ProductID, FromDate, ToDate, Value, version
	</sql>
	
	<sql id="weekly_columns">
		<include refid="columns" />, tmln.start, tmln.end, tmln.week
	</sql>
	
	<insert id="create" parameterType="MinStay" useGeneratedKeys="true" keyProperty="id">
		insert into property_min_stay (
			ID,
			SupplierID,
			ProductID,
			FromDate,
			ToDate,
			Value,
			version
		)
		values (
			#{id,jdbcType=INTEGER},
			#{supplierid,jdbcType=INTEGER},
			#{productid,jdbcType=VARCHAR},
			#{fromdate,jdbcType=DATE},
			#{todate,jdbcType=DATE},
			#{value,jdbcType=INTEGER},
			#{version,jdbcType=TIMESTAMP}
		)
	</insert>
	
	<select id="read" parameterType="String" resultMap="ResultMap">
		select
		<include refid="columns" />
		from property_min_stay
		where ID = #{id,jdbcType=INTEGER}
	</select>
	
	<select id="readbyexample" parameterType="MinStay" resultMap="ResultMap">
		select property_min_stay.* 
		from property_min_stay
		where property_min_stay.ProductID = #{productid,jdbcType=VARCHAR}
				and property_min_stay.SupplierID = #{supplierid,jdbcType=INTEGER}
				and property_min_stay.FromDate <![CDATA[ <= ]]> #{fromdate,jdbcType=DATE}
				and property_min_stay.ToDate <![CDATA[ >= ]]> #{fromdate,jdbcType=DATE}
		limit 1
	</select>
	
	<update id="update" parameterType="MinStay">
		update property_min_stay
		<set>
			<if test="id != null">
				ID = #{id,jdbcType=INTEGER},
			</if>
			<if test="supplierid != null">
				SupplierID = #{supplierid,jdbcType=INTEGER},
			</if>
			<if test="productid != null">
				ProductID = #{productid,jdbcType=VARCHAR},
			</if>
			<if test="fromdate != null">
				FromDate = #{fromdate,jdbcType=DATE},
			</if>
			<if test="todate != null">
				ToDate = #{todate,jdbcType=DATE},
			</if>
			<if test="value != null">
				value = #{value,jdbcType=INTEGER},
			</if>
			<if test="version != null">
				version = #{version,jdbcType=TIMESTAMP},
			</if>
		</set>
		where ID = #{id,jdbcType=INTEGER}
	</update>
	
	<delete id="delete" parameterType="String">
		delete from property_min_stay
		where ID = #{id,jdbcType=INTEGER}
	</delete>
	
	<select id="exists" parameterType="MinStay" resultMap="ResultMap">
		select
		<include refid="columns" />
		from property_min_stay
		where ProductID = #{productid,jdbcType=INTEGER}
			and FromDate = #{fromdate,jdbcType=DATE}
			and ToDate = #{todate,jdbcType=DATE}
		limit 1
	</select>
	
	<update id="deleteversion" parameterType="MinStay">
		delete from property_min_stay
		where ProductID = #{productid,jdbcType=INTEGER}
			and version <![CDATA[ <> ]]> #{version,jdbcType=TIMESTAMP}
	</update>
	
	<select id="getMinstayByWeeks" parameterType="MinstayWeek" resultType="net.cbtltd.json.minstay.WeeklyMinstay">
		select 
		<include refid="weekly_columns" />
		 from property_min_stay p 
			join (select week(date) as week, (select DATE_SUB(date, INTERVAL (select DAYOFWEEK(date) - 1) DAY)) as start, (SELECT DATE(date + INTERVAL (7 - DAYOFWEEK(date)) DAY)) as end
			from timeline where date <![CDATA[ >= ]]> #{fromDate,jdbcType=DATE} and date <![CDATA[ <= ]]> #{toDate,jdbcType=DATE} group by week order by date) as tmln 
		on (p.ProductID = #{entityId,jdbcType=VARCHAR}
		and ((p.toDate <![CDATA[ >= ]]> tmln.start and p.toDate <![CDATA[ <= ]]> tmln.end)
		or (p.fromdate <![CDATA[ >= ]]> tmln.start and p.fromdate <![CDATA[ <= ]]> tmln.end)
		or (p.fromdate <![CDATA[ <= ]]> tmln.start and p.toDate <![CDATA[ >= ]]> tmln.end)));
	</select>
	
</mapper>